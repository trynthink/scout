description: (string) A description of the scenario configuration.
  Default null
ecm_prep:
  add_typ_eff: (boolean) If true, enable automatic addition of
    ECMs with typical (business-as-usual) efficiency to compete
    with user-defined ECMs. Default False
  adopt_scn_restrict: (string) Specify single desired adoption
    scenario, otherwise both scenarios will be used. Allowed values
    are {Max adoption potential, Technical potential, null}. Default
    null
  alt_ref_carb: (string) Specify alternate reference grid scnenario
    for baseline electricity emissions intensities (rather than
    AEO). 'MidCase' refers to the Standard Scenarios Mid Case
    and 'DECARB-bau' refers to the ReEDS "DECARB" business-as-usual
    scenario. Allowed values are {DECARB-bau, MidCase, null}.
    Default null
  alt_regions: (string) Specify an alternative region breakdown.
    Allowed values are {AIA, EMM, State}. Default EMM
  captured_energy: (boolean) If true, enable captured energy calculation.
    Default False
  detail_brkout: (array) List of options by which to breakout
    results. The `fuel types` option is only valid if the split_fuel
    argument is set to false. The `all` option selects all three
    breakout categories. Allowed values are 0 or more of {all,
    buildings, fuel types, regions}. Default []
  ecm_directory: (string) Directory containing ECM definitions
    and savings shapes (if applicable). The directory path can
    be absolute or relative to either the configuration file (.yml)
    or the command line path, depending on where the argument
    is assigned. If not provided, ./ecm_definitions will be used.
    Default null
  ecm_files: (array) Specify a subset of ECM definitions in the
    ECM directory. Values must contain exact matches to the ECM
    definition file names in `ecm_directory`, excluding the file
    extension. If argument is null, then all files within `ecm_directory`
    will be prepared, subject to the `ecm_files_regex` argument,
    if applicable. Default null
  ecm_files_regex: (array) Specify a subset of ECM definitions
    in the ECM directory using a regular expression. Each value
    will be matched to file names in `ecm_directory`. Default
    []
  ecm_packages: (array) Specify ECM packages; values must correspond
    with package_ecms.json package names in the ECM directory.
    If no list or an empty list is provided, no packages will
    be used. Include an asterisk ("*") in the list to prepare
    all packages present in package_ecms.json. Contributing ECMs
    for specified packages will automatically be prepared regardless
    of their presence in the `ecm_directory`, `ecm_files`, and/or
    `ecm_files_regex` arguments. Default []
  exog_hp_rates:
    exog_hp_rate_scenario: (string) Guidehouse E3HP conversion
      scenario to use for exogenous HP rates. Allowed values are
      {aggressive, conservative, most aggressive, optimistic,
      null}. Default null
    switch_all_retrofit_hp: (boolean) If true, assume all retrofits
      convert to heat pumps, otherwise, retrofits are subject
      to the same external heat pump conversion rates assumed
      for new/replacement decisions. Only applicable if `exog_hp_rate_scenario`
      and `retrofit_type` are defined. Default False
  floor_start: (integer) Apply an elevated performance floor starting
    in the year specified. The desired future year must be given
    in the format YYYY. Default null
  fugitive_emissions: (array) Array enabling fugitive emissions;
    array may include one of the three supply chain methane leakage
    rate options and one of the three refrigerant options. Allowed
    values are 0 or more of {low-gwp refrigerant, methane-high,
    methane-low, methane-mid, typical refrigerant, typical refrigerant
    no phaseout}. Default []
  grid_decarb:
    grid_assessment_timing: (string, required if the grid_decarb
      key is present) When to assess avoided emissions and costs
      from non-fuel switching measures relative to the additional
      grid decarbonization. Only applicable if `grid_decarb_level`
      is provided. Allowed values are {after, before, null}. Default
      null
    grid_decarb_level: (string, required if the grid_decarb key
      is present) Enable grid decarbonization - `95by2050` represents
      a 95 percent reduction in grid emissions from 2005 levels
      by 2050 and `100by2035` represents 100 percent grid decarbonization
      by 2035. 'DECARB' options were produced as part of EERE's
      DECARB initiative; `DECARB-mid` represents 97 percent grid
      decarbonization by 2050, and `DECARB-high` represents 100
      percent grid decarbonization by 2035. Only applicable if
      `grid_assessment_timing` is also provided. Allowed values
      are {100by2035, 95by2050, DECARB-high, DECARB-mid, null}.
      Default null
  health_costs: (boolean) If true, enable health costs. Requires
    alt_regions to be set to `EMM`. Default False
  no_eff_capt: (boolean) If true, suppress reporting of ECM-captured
    efficient energy use. Default False
  no_lnkd_costs:
    no_lnkd_op_costs: (boolean) For measures that span heating
      or cooling and other end uses, count operating costs for
      only the anchor end use (rather than all end uses) in representing
      competition w/ other measures (default anchor is heating).
      Default False
    no_lnkd_stk_costs: (boolean) For measures that span heating
      or cooling and other end uses, count stock costs for only
      the anchor end use (rather than all end uses) in representing
      competition w/ other measures (default anchor is heating).
      Default False
  no_scnd_lgt: (boolean) If true, disable the calculation of secondary
    heating and cooling energy effects from changes in lighting
    efficacy. Default False
  pkg_env_costs: (string) Define what measure data should be written
    out for inclusion in measure competition. `include HVAC` will
    prepare HVAC-only versions of all HVAC/envelope packages for
    measure competition, `exclude HVAC` will exclude these HVAC-only
    measures from measure competition. Allowed values are {exclude
    HVAC, include HVAC, null}. Default null
  pkg_env_sep: (boolean) If true, enable output of separate envelope
    ECM impacts when both HVAC and envelope ECMs are combined
    in one or more measure packages. Default False
  retrofits:
    retrofit_mult_year: (integer) The year by which the retrofit
      multiplier is achieved (only for increasing retrofit_type).
      Default null
    retrofit_multiplier: (number) Factor by which early retrofit
      rates are multiplied (only for increasing retrofit_type).
      Default null
    retrofit_type: (string, required if the retrofits key is present)
      Specify early retrofit rates. `constant` assumes component-based
      early retrofit rates that do not change over time, `increasing`
      assumes rates that increase over time. Allowed values are
      {constant, increasing, null}. Default null
  rp_persist: (boolean) If true, enable relative performance persistence.
    Default False
  sect_shapes: (boolean) If true, enable calculation of sector-level
    electricity savings shapes. Default False
  site_energy: (boolean) If true, enable site energy calculation.
    Default False
  split_fuel: (boolean) If true, split out ECM results reporting
    by fuel type. Default False
  tsv_metrics:
    tsv_average_days: (string) The day type to average over. Required
      if tsv_type is `energy` or tsv_power_agg is `average`. Allowed
      values are {all, weekdays, weekends, null}. Default null
    tsv_daily_hr_restrict: (string, required if the tsv_metrics
      key is present) The daily hour range to restrict time-sensitive
      metrics, where `all` is all hours, `peak` is peak demand
      period hours, and `low` is low demand period hours. Required
      if running tsv_metrics. Allowed values are {all, low, peak,
      null}. Default null
    tsv_energy_agg: (string) Define how the the tsv_daily_hr_restrict
      hours are aggregated, required when tsv_type is `energy`.
      Allowed values are {average, sum, null}. Default null
    tsv_power_agg: (string) Define how the the tsv_daily_hr_restrict
      hours are aggregated, required when tsv_type is `power`.
      Allowed values are {average, peak, null}. Default null
    tsv_season: (string) Season of focus for time-sensitve metrics.
      Allowed values are {intermediate, summer, winter, null}.
      Default null
    tsv_sys_shape_case: (string) The basis for determining hours
      for peak or low demand. Required if tsv_daily_hr_restrict
      is `peak` or `low`. Allowed values are {net renewable high
      renewables, net renewable reference, total high renewables,
      total reference, null}. Default null
    tsv_type: (string, required if the tsv_metrics key is present)
      Time-sensitive metric desired, where `energy` is the change
      in energy and `power` is the change in power (e.g., single
      hour GW). Required if running tsv_metrics. Allowed values
      are {energy, power, null}. Default null
  verbose: (boolean) If true, enable verbose mode. Default False
run:
  mkt_fracs: (boolean) If true, flag market penetration outputs.
    Default False
  report_cfs: (boolean) If true, report competition adjustment
    fractions. Default False
  report_stk: (boolean) If true, report baseline/measure stock
    data. Default False
  results_directory: (string) Directory in which to output results.
    The directory path can be absolute or relative to either the
    configuration file (.yml) or the command line path, depending
    on where the argument is assigned. If not provided, ./results
    will be used. Default null
  trim_results: (boolean) If true, reduce results file size. Default
    False
  verbose: (boolean) If true, print all warnings to stdout. Default
    False
